############Start Macro vom Klipper Github############
[gcode_macro START_PRINT]
gcode:
    CLEAR_PAUSE
    T{initial_tool} MIN_TEMP={220[initial_tool]}
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(220)|float %}    
    #Temperatur über LED Darstellen
    #NEOPIXEL_DISPLAY LED="Beleuchtung" TYPE=extruder_temp MODE=glow 
    # Start bed heating
    M140 S{BED_TEMP}
    M104 S{EXTRUDER_TEMP}
    # Use absolute coordinates
    G90
    # Reset the G-Code Z offset (adjust Z offset if needed)
    #SET_GCODE_OFFSET Z=0.0 #Macht Calibrate_z automatisch
    # Home the printer if not done
    {% if printer.toolhead.homed_axes != "xy" %}
        #RESPOND TYPE=command MSG='Homing'
        G28
    {% else %}
        G28 Z0
    {% endif %}

    RESPOND TYPE=command MSG='Auf Heizen warten'
    M190 S{BED_TEMP}
    # Set and wait for nozzle to reach temperature
    M109 S{EXTRUDER_TEMP}
   
    #QGL in not done
    {% if printer.quad_gantry_level.applied == False %}
        #RESPOND TYPE=command MSG='Quad Gantry Leveling'
        QUAD_GANTRY_LEVEL
        #G28 Z
    {% endif %}
    
    #Clean NOzzle
    RESPOND TYPE=command MSG='Cleaning Nozzle'
   # CLEAN_NOZZLE
    #Z-Offset
    RESPOND TYPE=command MSG='Calibrating Z'
    CALIBRATE_Z
    # Bed Mash erstellen
    BED_MESH_CLEAR
    #RESPOND TYPE=command MSG='Bed Meshing'
    BED_MESH_CALIBRATE ADAPTIVE=1
    # Wait for bed to reach temperature
    M190 S{BED_TEMP}
    # Set and wait for nozzle to reach temperature
    M109 S{EXTRUDER_TEMP}
    #G1 Z50 F3000 #neu
    #G1 X5 F3000 #neu
    #G1 Y5 F3000 #neu
    # Move the nozzle near the bed
    
    G1 Z5 F3000
    # Move the nozzle very close to the bed
   # G1 Z0.15 F300
    # Purge Line machen
    RESPOND TYPE=command MSG='Clean Nozzle'
  #  CLEAN_NOZZLE
    G4 P5000
    #G1 Z50 F3000 #neu    
    RESPOND TYPE=command MSG='Purging'
    #LINE_PURGE
    VORON_PURGE
    G90
    #G4 P5000
    #LED als Progress Bar
   # NEOPIXEL_DISPLAY LED="Beleuchtung" TYPE=print_percent MODE=progress
    #SET_LED LED="Beleuchtung" RED=0.0 GREEN=0.0 BLUE=0.0 SYNC=0 TRANSMIT=1
   # G1 E2 F1500
    #Reset Extruder
    G92 E0
    RESPOND TYPE=command MSG='Start Printing'
    
    

[gcode_macro END_PRINT]
gcode:
    # Turn off bed, extruder, and fan
    M140 S0
    M104 S0
    M106 S0
    
    G91
    # Raise nozzle by 10mm
    G1 Z40 E-1 F3000
    # Move nozzle away from print while retracting
    G1 X-100 Y-100 E-3 F1800
    
    G90
    # Disable steppers
    M84
    #LED ausmachen
    #SET_LED LED="Beleuchtung" RED=0.0 GREEN=0.0 BLUE=0.0 SYNC=0 TRANSMIT=1
    

[gcode_macro G29]
gcode:
 BED_MESH_CALIBRATE
 G1 X151 Y115 Z5 F15000

[gcode_macro CALIBRATE_Z]
rename_existing: BASE_CALIBRATE_Z
gcode:
    {% if printer.toolhead.homed_axes != "xyz" %}
        G28
    {% endif %}
    {% set bed_position = params.BED_POSITION|default('None') %}
    G1 Z30 F3000 #neu
                             # can also be a conditional homing macro
    M117 Z-Calibration..
    ATTACH_PROBE                # a macro for fetching the probe first
    {% if bed_position != 'None' %}
      BASE_CALIBRATE_Z BED_POSITION={bed_position}
    {% else %}
      BASE_CALIBRATE_Z
    {% endif %}
    DOCK_PROBE                # and parking it afterwards (or DOCK_PROBE in klicky macros)
    M117


[gcode_macro CLEAN_NOZZLE]
variable_start_x: 22
variable_start_y: -9
variable_start_z: 0
variable_wipe_dist: 50
variable_wipe_qty: 10
variable_wipe_spd: 180
variable_raise_distance: 30

gcode:
 {% if "xyz" not in printer.toolhead.homed_axes %}
   G28
 {% endif %}
 Dock_Probe
 
 #SAVE_GCODE_STATE NAME=preCleaning
 
 G90                                            ; absolute positioning
 RESPOND TYPE=command MSG='Clean Nozzle'
 ## Move nozzle to start position
 G1 X{start_x} Y{start_y} F6000
 G1 Z{start_z} F1500

 ## Wipe nozzle
 {% for wipes in range(1, (wipe_qty + 1)) %}
   G1 X{start_x + wipe_dist} F{wipe_spd * 60}
   G1 X{start_x} F{wipe_spd * 60}
 {% endfor %}

 ## Raise nozzle
 G1 Z{raise_distance}
 #RESTORE_GCODE_STATE NAME=preCleaning


[gcode_macro _HOME_X]
gcode:
    # Always use consistent run_current on A/B steppers during sensorless homing
  #  {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
  #  {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
  #  {% set HOME_CURRENT = 0.7 %}
  #  SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
  #  SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}

    # Home
    G28 X
    # Move away
    SAVE_GCODE_STATE NAME=Moving
    G91
    G1 X10 F1200
    RESTORE_GCODE_STATE NAME=Moving
    
    # Wait just a second… (give StallGuard registers time to clear)
    G4 P2000
    # Set current during print
  #  SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
  #  SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}

[gcode_macro _HOME_Y]
gcode:
    # Set current for sensorless homing
 #   {% set RUN_CURRENT_X = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
 #   {% set RUN_CURRENT_Y = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
 #   {% set HOME_CURRENT = 0.7 %}
 #   SET_TMC_CURRENT STEPPER=stepper_x CURRENT={HOME_CURRENT}
 #   SET_TMC_CURRENT STEPPER=stepper_y CURRENT={HOME_CURRENT}

    # Home
    G28 Y
    # Move away
    SAVE_GCODE_STATE NAME=Moving
    G91
    G1 Y15 F1200
    RESTORE_GCODE_STATE NAME=Moving

    # Wait just a second… (give StallGuard registers time to clear)
    G4 P2000
    # Set current during print
 #   SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT_X}
 #   SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT_Y}















 